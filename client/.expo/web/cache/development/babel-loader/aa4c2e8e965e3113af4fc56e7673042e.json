{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\William\\\\Desktop\\\\thyckcorgishub\\\\h2h\\\\client\\\\components\\\\GameScreen.tsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport UserButton from \"../assets/images/users_button.svg\";\nimport NextButton from \"../assets/images/next_button.svg\";\nimport QuitButton from \"../assets/images/quit_button.svg\";\nimport socket from \"../socket\";\n\nvar isTurn = function isTurn(name, current) {\n  return name === current;\n};\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.bigText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, title));\n};\n\nexport default function GameScren(_ref2) {\n  var _this2 = this;\n\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  var _route$params = route.params,\n      code = _route$params.code,\n      name = _route$params.name,\n      _current = _route$params.current,\n      _card = _route$params.card,\n      _users = _route$params.users,\n      _isHost = _route$params.isHost;\n\n  var _useState = useState(_card),\n      _useState2 = _slicedToArray(_useState, 2),\n      card = _useState2[0],\n      setCard = _useState2[1];\n\n  var _useState3 = useState(_current),\n      _useState4 = _slicedToArray(_useState3, 2),\n      current = _useState4[0],\n      setCurrent = _useState4[1];\n\n  var _useState5 = useState(_users),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var _useState7 = useState(_isHost),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isHost = _useState8[0],\n      setHost = _useState8[1];\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(Item, {\n      title: item,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 51\n      }\n    });\n  };\n\n  var updateCurrent = function updateCurrent(data) {\n    var current = data.current,\n        card = data.card;\n    setCard(card);\n    setCurrent(current);\n  };\n\n  useEffect(function () {\n    socket.on(\"next-card\", updateCurrent);\n    socket.on(\"quit-game\", function (data) {\n      var newHost = data.newHost,\n          users = data.users;\n      setUsers(users);\n      setHost(newHost === \"\" ? isHost : name === newHost);\n      updateCurrent(data);\n    });\n  });\n\n  var nextCardHandler = function nextCardHandler() {\n    socket.emit(\"next-card\", code, updateCurrent);\n  };\n\n  var quitGameHandler = function quitGameHandler() {\n    socket.emit(\"quit-game\", code, name, isHost);\n    navigation.navigate(\"Home\", {\n      name: name\n    });\n  };\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalVisible = _useState10[0],\n      setModalVisible = _useState10[1];\n\n  var nextButton = isTurn(name, current) ? React.createElement(TouchableOpacity, {\n    onPress: nextCardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(NextButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  })) : React.createElement(NextButton, {\n    opacity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  });\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bigText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, name), React.createElement(Text, {\n    style: styles.smallText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, isTurn(name, current) ? \"It is your turn. Ask the group the question below.\" : \"It is \" + current + \"'s turn.\"), React.createElement(View, {\n    style: styles.cardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.bigText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, isTurn(name, current) ? card : \"\")), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.bigText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Who's in the room?\"), React.createElement(FlatList, {\n    data: users,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    extraData: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.smallText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Close\"))))), React.createElement(View, {\n    style: styles.navBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(UserButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), nextButton, React.createElement(TouchableOpacity, {\n    onPress: quitGameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(QuitButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n    backgroundColor: \"black\",\n    textAlign: \"center\"\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    margin: 10\n  },\n  cardContainer: {\n    width: 250,\n    height: 400,\n    backgroundColor: \"#892cdc\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 20\n  },\n  navBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  bigText: {\n    fontSize: 30,\n    color: \"white\",\n    paddingVertical: 20,\n    padding: 10,\n    textAlign: \"center\",\n    fontFamily: \"Avenir-Light\"\n  },\n  smallText: {\n    fontSize: 18,\n    fontFamily: \"Avenir-Light\",\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"black\",\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: \"white\",\n    padding: 10,\n    height: 300,\n    width: 300,\n    opacity: 0.9\n  }\n});","map":{"version":3,"sources":["C:/Users/William/Desktop/thyckcorgishub/h2h/client/components/GameScreen.tsx"],"names":["React","useEffect","useState","TouchableOpacity","UserButton","NextButton","QuitButton","socket","isTurn","name","current","Item","title","styles","bigText","GameScren","route","navigation","params","code","_current","_card","card","_users","users","_isHost","isHost","setCard","setCurrent","setUsers","setHost","renderItem","item","updateCurrent","data","on","newHost","nextCardHandler","emit","quitGameHandler","navigate","modalVisible","setModalVisible","nextButton","screen","smallText","cardContainer","Alert","alert","modalContainer","modalView","navBar","StyleSheet","create","padding","alignItems","justifyContent","flex","backgroundColor","textAlign","alignContent","margin","width","height","borderRadius","flexDirection","fontSize","color","paddingVertical","fontFamily","borderWidth","borderColor","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { StackNavigationHelpers } from \"@react-navigation/stack/lib/typescript/src/types\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Modal,\r\n  Alert,\r\n  Image,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\nimport UserButton from \"../assets/images/users_button.svg\";\r\nimport NextButton from \"../assets/images/next_button.svg\";\r\nimport QuitButton from \"../assets/images/quit_button.svg\";\r\n\r\nimport socket from \"../socket\";\r\ninterface GameScreenProps {\r\n  navigation: StackNavigationHelpers;\r\n  route: any;\r\n}\r\n\r\nconst isTurn = (name: string, current: string) => name === current;\r\n\r\nconst Item = ({ title }: { title: any }) => (\r\n  <View>\r\n    <Text style={styles.bigText}>{title}</Text>\r\n  </View>\r\n);\r\n\r\nexport default function GameScren({ route, navigation }: GameScreenProps) {\r\n  const {\r\n    code,\r\n    name,\r\n    current: _current,\r\n    card: _card,\r\n    users: _users,\r\n    isHost: _isHost,\r\n  } = route.params;\r\n  const [card, setCard] = useState(_card);\r\n  const [current, setCurrent] = useState(_current);\r\n  const [users, setUsers] = useState(_users);\r\n  const [isHost, setHost] = useState(_isHost);\r\n\r\n  const renderItem = ({ item }: { item: any }) => <Item title={item} />;\r\n\r\n  const updateCurrent = (data: any) => {\r\n    const { current, card } = data;\r\n    setCard(card);\r\n    setCurrent(current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"next-card\", updateCurrent);\r\n    socket.on(\"quit-game\", (data: any) => {\r\n      const { newHost, users } = data;\r\n      setUsers(users);\r\n      setHost(newHost === \"\" ? isHost : name === newHost);\r\n      updateCurrent(data);\r\n    });\r\n  });\r\n\r\n  const nextCardHandler = () => {\r\n    socket.emit(\"next-card\", code, updateCurrent);\r\n  };\r\n\r\n  const quitGameHandler = () => {\r\n    socket.emit(\"quit-game\", code, name, isHost);\r\n    navigation.navigate(\"Home\", { name });\r\n  };\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const nextButton = isTurn(name, current) ? (\r\n    <TouchableOpacity onPress={nextCardHandler}>\r\n      <NextButton />\r\n    </TouchableOpacity>\r\n  ) : (\r\n    <NextButton opacity={0.5} />\r\n  );\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Text style={styles.bigText}>{name}</Text>\r\n      <Text style={styles.smallText}>\r\n        {isTurn(name, current)\r\n          ? `It is your turn. Ask the group the question below.`\r\n          : `It is ${current}'s turn.`}\r\n      </Text>\r\n      <View style={styles.cardContainer}>\r\n        <Text style={styles.bigText}>{isTurn(name, current) ? card : \"\"}</Text>\r\n      </View>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n        }}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.bigText}>Who's in the room?</Text>\r\n            <FlatList\r\n              data={users}\r\n              renderItem={renderItem}\r\n              keyExtractor={(item) => item}\r\n              extraData={users}\r\n            />\r\n\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n              }}\r\n            >\r\n              <Text style={styles.smallText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <View style={styles.navBar}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setModalVisible(true);\r\n          }}\r\n        >\r\n          <UserButton />\r\n        </TouchableOpacity>\r\n        {nextButton}\r\n        <TouchableOpacity onPress={quitGameHandler}>\r\n          <QuitButton />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    padding: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    margin: 10,\r\n  },\r\n  cardContainer: {\r\n    width: 250,\r\n    height: 400,\r\n    backgroundColor: \"#892cdc\",\r\n    borderRadius: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 20,\r\n  },\r\n  navBar: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  bigText: {\r\n    fontSize: 30,\r\n    color: \"white\",\r\n    paddingVertical: 20,\r\n    padding: 10,\r\n    textAlign: \"center\",\r\n    fontFamily: \"Avenir-Light\",\r\n  },\r\n  smallText: {\r\n    fontSize: 18,\r\n    fontFamily: \"Avenir-Light\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"black\",\r\n    borderRadius: 20,\r\n    borderWidth: 1,\r\n    borderColor: \"white\",\r\n    padding: 10,\r\n    // justifyContent: \"center\",\r\n    height: 300,\r\n    width: 300,\r\n    opacity: 0.9,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}