{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\William\\\\Desktop\\\\thyckcorgishub\\\\h2h\\\\client\\\\components\\\\CustomCardScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useState } from \"react\";\nimport socket from \"../socket\";\nexport default function CustomCardScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      code = _route$params.code,\n      name = _route$params.name,\n      isHost = _route$params.isHost;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var submitCardHandler = function submitCardHandler() {\n    socket.emit(\"custom\", code, question, function (data) {\n      setQuestion(\"\");\n    });\n  };\n\n  var startGameHandler = function startGameHandler() {\n    socket.emit(\"start-game\", code, function (data) {\n      navigation.navigate(\"Game\", _objectSpread({\n        code: code,\n        name: name,\n        isHost: isHost\n      }, data));\n    });\n  };\n\n  var start = isHost ? React.createElement(Button, {\n    title: \"Start game\",\n    onPress: startGameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }) : null;\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.screen,\n    behavior: \"padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.bigText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Add custom card(s) to be read anonymously\"), React.createElement(TextInput, {\n    multiline: true,\n    style: styles.inputField,\n    placeholder: \"Input question\",\n    placeholderTextColor: \"black\",\n    onChangeText: function onChangeText(text) {\n      return setQuestion(text);\n    },\n    value: question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Submit card\",\n    onPress: submitCardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), start);\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  inputField: {\n    padding: 5,\n    marginTop: 10,\n    width: 250,\n    textAlign: \"left\",\n    alignSelf: \"center\",\n    borderBottomWidth: 1,\n    borderColor: \"white\",\n    fontSize: 18,\n    color: \"white\",\n    fontFamily: \"Avenir-Light\"\n  },\n  bigText: {\n    fontFamily: \"Avenir-Light\",\n    fontSize: 30,\n    color: \"white\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/William/Desktop/thyckcorgishub/h2h/client/components/CustomCardScreen.tsx"],"names":["React","useState","socket","CustomCardScreen","navigation","route","params","code","name","isHost","question","setQuestion","submitCardHandler","emit","data","startGameHandler","navigate","start","styles","screen","bigText","inputField","text","StyleSheet","create","padding","alignItems","justifyContent","flex","backgroundColor","marginTop","width","textAlign","alignSelf","borderBottomWidth","borderColor","fontSize","color","fontFamily"],"mappings":"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","sourcesContent":["import { StackNavigationHelpers } from \"@react-navigation/stack/lib/typescript/src/types\";\r\nimport * as React from \"react\";\r\nimport {\r\n  KeyboardAvoidingView,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { useState } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\ninterface CustomCardScreenProps {\r\n  navigation: StackNavigationHelpers;\r\n  route: any;\r\n}\r\n\r\nexport default function CustomCardScreen({\r\n  navigation,\r\n  route,\r\n}: CustomCardScreenProps) {\r\n  const { code, name, isHost } = route.params;\r\n  const [question, setQuestion] = useState(\"\");\r\n\r\n  const submitCardHandler = () => {\r\n    socket.emit(\"custom\", code, question, (data: any) => {\r\n      setQuestion(\"\");\r\n    });\r\n  };\r\n\r\n  const startGameHandler = () => {\r\n    socket.emit(\"start-game\", code, (data) => {\r\n      navigation.navigate(\"Game\", {\r\n        code,\r\n        name,\r\n        isHost,\r\n        ...data,\r\n      });\r\n    });\r\n  };\r\n\r\n  const start = isHost ? (\r\n    <Button title=\"Start game\" onPress={startGameHandler} />\r\n  ) : null;\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.screen} behavior=\"padding\">\r\n      <Text style={styles.bigText}>\r\n        Add custom card(s) to be read anonymously\r\n      </Text>\r\n      <TextInput\r\n        multiline={true}\r\n        style={styles.inputField}\r\n        placeholder=\"Input question\"\r\n        placeholderTextColor=\"black\"\r\n        onChangeText={(text) => setQuestion(text)}\r\n        value={question}\r\n      />\r\n      <Button title=\"Submit card\" onPress={submitCardHandler} />\r\n      {start}\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    padding: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n  },\r\n  inputField: {\r\n    padding: 5,\r\n    marginTop: 10,\r\n    // marginBottom: 20,\r\n    width: 250,\r\n    textAlign: \"left\",\r\n    alignSelf: \"center\",\r\n    borderBottomWidth: 1,\r\n    borderColor: \"white\",\r\n    fontSize: 18,\r\n    color: \"white\",\r\n    fontFamily: \"Avenir-Light\",\r\n  },\r\n  bigText: {\r\n    fontFamily: \"Avenir-Light\",\r\n    fontSize: 30,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}