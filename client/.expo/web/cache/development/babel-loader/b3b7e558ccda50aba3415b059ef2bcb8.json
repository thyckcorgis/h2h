{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\William\\\\Desktop\\\\thyckcorgishub\\\\h2h\\\\client\\\\components\\\\LoadingScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function LoadingScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Start\");\n    },\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.bigText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"confessation\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      paddingVertical: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.smallText), {}, {\n      fontStyle: \"italic\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"[\\u02CCk\\u0251n.f\\u025Bs\\u02C8se\\u026A.\\u0283\\u0259n]\"), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.smallText), {}, {\n      fontWeight: \"bold\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \" \", \"\\u22C5 noun\")), React.createElement(Text, {\n    style: styles.smallText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"a difficult but meaningful conversation.\"), React.createElement(Text, {\n    style: styles.continueText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Tap to continue.\")));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  bigText: {\n    fontFamily: \"Georgia\",\n    fontSize: 30,\n    color: \"white\"\n  },\n  smallText: {\n    fontFamily: \"Georgia\",\n    fontSize: 18,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  continueText: {\n    fontSize: 14,\n    color: \"#892cdc\",\n    paddingVertical: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/William/Desktop/thyckcorgishub/h2h/client/components/LoadingScreen.tsx"],"names":["React","LoadingScreen","navigation","styles","screen","navigate","bigText","flexDirection","paddingVertical","smallText","fontStyle","fontWeight","continueText","StyleSheet","create","padding","alignItems","justifyContent","flex","backgroundColor","fontFamily","fontSize","color","textAlign"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAQA,eAAe,SAASC,aAAT,OAA2D;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AACxE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMF,UAAU,CAACG,QAAX,CAAoB,OAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACC,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,eAAe,EAAE;AAAzC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOL,MAAM,CAACM,SAAd;AAAyBC,MAAAA,SAAS,EAAE;AAApC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOP,MAAM,CAACM,SAAd;AAAyBE,MAAAA,UAAU,EAAE;AAArC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,gBAJF,CALF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAdF,EAiBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACS,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBF,CADF,CADF;AAuBD;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,cAAc,EAAE,QAHV;AAINC,IAAAA,IAAI,EAAE,CAJA;AAKNC,IAAAA,eAAe,EAAE;AALX,GADuB;AAQ/Bb,EAAAA,OAAO,EAAE;AACPc,IAAAA,UAAU,EAAE,SADL;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,KAAK,EAAE;AAHA,GARsB;AAa/Bb,EAAAA,SAAS,EAAE;AACTW,IAAAA,UAAU,EAAE,SADH;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,KAAK,EAAE,OAHE;AAITC,IAAAA,SAAS,EAAE;AAJF,GAboB;AAmB/BX,EAAAA,YAAY,EAAE;AAGZS,IAAAA,QAAQ,EAAE,EAHE;AAIZC,IAAAA,KAAK,EAAE,SAJK;AAKZd,IAAAA,eAAe,EAAE;AALL;AAnBiB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StackNavigationHelpers } from \"@react-navigation/stack/lib/typescript/src/types\";\r\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\r\n\r\ninterface LoadingScreenProps {\r\n  navigation: StackNavigationHelpers;\r\n}\r\n\r\nexport default function LoadingScreen({ navigation }: LoadingScreenProps) {\r\n  return (\r\n    <View style={styles.screen}>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate(\"Start\")}\r\n        style={styles.screen}\r\n      >\r\n        <Text style={styles.bigText}>confessation</Text>\r\n        <View style={{ flexDirection: \"row\", paddingVertical: 30 }}>\r\n          <Text style={{ ...styles.smallText, fontStyle: \"italic\" }}>\r\n            [ˌkɑn.fɛsˈseɪ.ʃən]\r\n          </Text>\r\n          <Text style={{ ...styles.smallText, fontWeight: \"bold\" }}>\r\n            {\" \"}\r\n            ⋅ noun\r\n          </Text>\r\n        </View>\r\n        <Text style={styles.smallText}>\r\n          a difficult but meaningful conversation.\r\n        </Text>\r\n        <Text style={styles.continueText}>Tap to continue.</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    padding: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n  },\r\n  bigText: {\r\n    fontFamily: \"Georgia\",\r\n    fontSize: 30,\r\n    color: \"white\",\r\n  },\r\n  smallText: {\r\n    fontFamily: \"Georgia\",\r\n    fontSize: 18,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  continueText: {\r\n    // fontFamily:\r\n    // \"C:\\\\Users\\\\annet\\\\Downloads\\\\Other\\\\Projects\\\\HackED 2021\\\\h2h\\\\client\\\\assets\\\\fonts\\\\Comfortaa.ttf\",\r\n    fontSize: 14,\r\n    color: \"#892cdc\",\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}